<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="7613" started-at="2021-06-29T15:38:23Z" finished-at="2021-06-29T15:38:31Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="7613" started-at="2021-06-29T15:38:23Z" finished-at="2021-06-29T15:38:31Z">
      <class name="Regression.createOpportunity">
        <test-method status="FAIL" signature="createOpportunity()[pri:0, instance:Regression.createOpportunity@61832929]" name="createOpportunity" duration-ms="7588" started-at="2021-06-29T21:08:23Z" finished-at="2021-06-29T21:08:31Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: cannot determine loading status
from disconnected: received Inspector.detached event
  (Session info: chrome=85.0.4183.121)
Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc'
System info: host: '01HW1442137', ip: '10.96.12.128', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\966790\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:64217}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 08efd51c2b2b57246dcd1dd75e03867e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status
from disconnected: received Inspector.detached event
  (Session info: chrome=85.0.4183.121)
Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc'
System info: host: '01HW1442137', ip: '10.96.12.128', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\966790\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:64217}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 08efd51c2b2b57246dcd1dd75e03867e
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:282)
	at Regression.Base.initialiseDriver(Base.java:126)
	at Regression.createOpportunity.createOpportunity(createOpportunity.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOpportunity -->
        <test-method status="PASS" signature="afterclassmethod()[pri:0, instance:Regression.createOpportunity@61832929]" name="afterclassmethod" is-config="true" duration-ms="2" started-at="2021-06-29T21:08:31Z" finished-at="2021-06-29T21:08:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclassmethod -->
        <test-method status="PASS" signature="aftersuitemethod()[pri:0, instance:Regression.createOpportunity@61832929]" name="aftersuitemethod" is-config="true" duration-ms="0" started-at="2021-06-29T21:08:31Z" finished-at="2021-06-29T21:08:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuitemethod -->
      </class> <!-- Regression.createOpportunity -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
